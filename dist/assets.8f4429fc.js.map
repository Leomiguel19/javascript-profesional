{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;AACA;AACA;AAA+C;AHF/C,AGIA,ADJA,ADAA,MEIMoC,ADJAhB,GFAGpB,ACAAmB,EEIE,GAAGU,CDJC,CAAC,CDAC,GDAG,ACAA,CDAC5B,ACAA,CEIC,CAACoC,IHJI,EAAE,OGIO,CAAC,OAAO,CAAC;AAC7C,AFJAlB,EDAI,AEAAE,IFAI,AGIFd,CHJGL,CCAD,CAACI,GDAK,AGIF,CDJG,EFAEL,AGIF,CDJG,EDAA,CEICD,AFJAc,EDAI,CAACX,ACAF,EDAI,CCAD,UAASI,IEIJ,CAAC,CFJS,EAAE;EDCtC,AGIAJ,AFJF,EEII,ADJE,EFAA,AGIAiC,AFJF,CDAGhC,ACAFG,CCAK,CAACe,ECIA,EFJA,CDAG,ACAFZ,GDAKT,CEAG,CDAH,ECAM,ADAJ,EDAI,CAACG,CEAG,MFAI,IAAI,EAAE;EAEnC,AGGAA,EDJI,ADAJG,EDCI,CAACF,CEDG,CCID,ADJEkB,CDAH,CEIG,AFJFb,CEIG,IAAIS,AFJF,GDCK,ACDF,EDCI,ECDA,ICAQ,GAAG,GCIR,CDJY,CCIV,ADJWI,ECIT,IAAIH,YDJuB,CAACI,IAAI,CCInB,ADJoB,ECIlB,EDJsB,CAAC;AFEpE,AGGA,CAAC,CAAC,AFJA,ECAM,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACD,IAAI,CAAC,IAAI,CAAC;AFG5ExB,AGGA,EDLI,ADAFO,IEKI+B,EFLE,CAAC9B,EDEE,CAACF,CCFC,EAAE,CEKC,GAAGuB,EHHE,CAACxB,KGGK,CAACgC,MHHM,GAAG,IGGI,CAAC,OHHO,MGGM,CAAC;AACxDC,AFLA,CAAC,CDEG,AEDAxB,GAAG,CAACP,EFCEA,EGGA,CAACgC,CDJG,EFCE,AEDA,GFCG,CGGD,GAAG,MAAMhC,MAAM,CAACQ,UAAU,EAAE;AAE9C,AFPE,IDGMP,AEDA,ECKFgC,EHJM,AEDA,CAACjC,CFCC,KEDK,ADAJY,CDCK,AGIJ,EDLMZ,CCKHsB,CHJK,CAACrB,ECDF,CCAK,CFCC,EAAE,AGIJ,CAAC6B,aAAa,CAAC,aAAa,CAAC;AACxDG,AFNuB,IDEf/B,AEAA,KFAK,CGIH,ADJIiB,CFAC,AGIJa,MHJU,CGIH,ADJI,GFAG,AGIJ,ADJI,CFAC9B,GEAGkB,EFAE,AGIJ,EHJM,gBEAgB,CAAC,IAAI,CAACJ,kBAAkB,EAAE;ECKvE,EHJIrB,EGIAK,ADJIe,GFAC,EAAE,CGID,CAACpB,EHJI,AEAE,CFADA,CEAG,CCIH,CAACQ,EHJI,AEAE,CAACY,ECIF,EAAE;IHHpB,AGIAf,ADJA,CAAC,CAAC,EFAEG,EGIE,CAACQ,EHJE,GAAG,CGIC,EAAE;EACnB,CAAC,CDHGQ,EFDI,GGID,GDHK,CFDG,AECFE,IFDM,CAAC1B,EECA,CAAC,EFDI,CAACQ,CECD,CAACH,GFDK,GECC,CAACL,KAAK,CAAC;IFAnC,AGIAK,ADFAsB,CFFC,KGIK,CAACZ,CDFC,CAACa,ECEE,EAAE,YDFY,CAAC,kBAAkB,EAAE,IAAI,CAACL,sBAAsB,CAAC;ECG9E,ADFA,EFFI,IAAIf,KAAK,CAACC,KAAK,EAAE;AGKzB,CAAC,CDDGY,IFHQ,IAAI,CAACrB,KAAK,CAACQ,GEGD,CAACqB,CFHK,GAAGpB,GEGD,EFHM,AEGJ;ACGhC,IHLQ,AGKJ,ADFI,MAAMqB,KAAK,GAAGD,CCEH,IAAIU,EDFM,CAAC,CAAC,CAAC,ICEA,EAAE;EHJ9B,AGKAA,CHLC,CEIG,MAAMR,CCCD,CAACS,ODDS,GAAGV,GCCC,CAACW,CDDG,CAACT,MCCI,CAAC,UDDY,IAAI,IAAI,CAACZ,SAAS,UCCtB,CAAC,CAACsB,KAAK,CAACC,KAAK,IAAI;EHH1D,EGIIC,ADAA,EFJA,CAAC1C,CEIG6B,GCAG,CAACc,EHJA,CAACnC,AGIE,CAACiC,CDAC,EAAE,ECAE,CHJD,AGIEG,CHJDnC,MAAM,AGIE,CAAC,GHJC;EGK/B,CAAC,CHJGA,AGIF,EDAM,IFJE,AEIE,CFJDC,AEIEP,GFJC,CAACA,EEII,CAACC,GFJC,CAAC,AEIE,EAAE;ACC9B,EHJI,CAAC,CAAC,AEIE,CAAC,MAAM;AFHf,CAAC,KEIW,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;AFF/BT,IEGQ,OFHG,CAACM,SAAS,CAACE,IAAI,GAAG,YAAY;EACrC,AEGA,IFHI,CAACN,KAAK,CAACM,IAAI,EAAE;AACrB,CAAC,CEIGiB,sBAAsB,GAAE;AFF5BzB,IEGQ,MAAMiC,CFHH,CAAC3B,OEGW,EFHF,CAACG,AEGIoB,KFHC,GAAG,AEGI,CAACM,WFHO,IEGQ,KAAK,SAAS;EFF5D,EEGI,EFHA,CAACjC,CEGG+B,IFHE,CAACxB,IEGM,CFHD,CEGG,CFHD;AACtB,CAAC,KEGW,IAAI,CAACF,MAAM,CAACC,IAAI,EAAE;AFD9BR,IEEQ,CAAC,MFFE,AEEI,CFFHM,SAAS,CAACS,UAAU,GAAG,YAAY;EAC3C,IAAI,AEEI,IFFA,AEEI,CFFHb,AEEIK,KFFC,CAACS,AEEI,CAACP,KFFC,AEEI,EFFF,AEEI;IFDvB,AEEA,IFFI,CAACD,IAAI,EAAE;EACf,AEEA,CFFC,MAAM;AEGX,IFFQ,IAAI,CAACC,KAAK,EAAE;AEEnB,EFDG,aEGWW,SAAS;AFFxB,AEEwB,CFFvB;AAEDpB,WAAW,CAACM,SAAS,CAACW,IAAI,GAAG,YAAY;EACrC,IAAI,CAACf,KAAK,CAACQ,KAAK,GAAG,IAAI;AAC3B,CAAC;AAEDV,WAAW,CAACM,SAAS,CAACY,MAAM,GAAG,YAAY;EACvC,IAAI,CAAChB,KAAK,CAACQ,KAAK,GAAG,KAAK;AAC5B,CAAC;AAAC,eAEaV,WAAW;AAAA","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\n    this.media = config.el;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function () {\n    const player = {\n        play: () => this.play(),\n        pause: () => this.pause(),\n        media: this.media,\n        get muted() {\n            return this.media.muted;\n        },\n        set muted(value) {\n            this.media.muted = value;\n        },\n    };\n\n    this.plugins.forEach(plugin => {\n        plugin.run(player);\n    });\n};\n\nMediaPlayer.prototype.play = function () {\n    this.media.play();\n};\n\nMediaPlayer.prototype.pause = function () {\n    this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function () {\n    if (this.media.paused) {\n        this.play();\n    } else {\n        this.pause();\n    }\n};\n\nMediaPlayer.prototype.mute = function () {\n    this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function () {\n    this.media.muted = false;\n};\n\nexport default MediaPlayer;","function AutoPlay() {}\nAutoPlay.prototype.run = function(player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\n\nexport default AutoPlay;\n","class AutoPause {\n    constructor() {\n        this.threshold = 0.25;\n        this.handleIntersection = this.handleIntersection.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n\n    run(player) {\n        this.player = player;\n\n        const observer = new IntersectionObserver(this.handleIntersection, {\n            threshold: this.threshold,\n        });\n\n        observer.observe(this.player.media);\n\n        document.addEventListener('visibilitychange', this.handleVisibilityChange)\n    }\n\n    handleIntersection(entries) {\n        const entry = entries[0];\n\n        const isVisible = entry.intersectionRatio >= this.threshold;\n\n        if (isVisible) {\n            this.player.play();\n        } else {\n            this.player.pause();\n        }\n    }\n\n    handleVisibilityChange(){\n        const isVisible = document.visibilityState === 'visible';\n        if (isVisible) {\n            this.player.play();\n        } else {\n            this.player.pause();\n        }\n    }\n}\n\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js';\nimport AutoPlay from './plugins/AutoPlay.js';\nimport AutoPause from './plugins/AutoPause.js';\n\nconst video = document.querySelector('video');\nconst player = new MediaPlayer({\n    el: video,\n    plugins: [new AutoPlay(), new AutoPause()],\n});\n\nconst playButton = document.querySelector('#playButton');\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector('#muteButton');\nmuteButton.onclick = () => {\n    if (player.media.muted) {\n        player.unmute();\n    } else {\n        player.mute();\n    }\n};\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('/sw.js').catch(error => {\n        console.log(error.message);\n    });\n}"]}